const express = require('express')
const router = express.Router()
const multer = require('multer')()

// This would normally be generated by the server
// based on the deployed code version,
// preferably during build time
// (eg, with `git rev-parse --short HEAD`).
// First two short commit ids are saved below for "good" and "bad" versions
const commit1 = '5b7a6d4'
const commit2 = '1e418a1'
const version = commit1

router.get('/jquery.js', (req, res, next) => {
  res.sendFile('jquery.js', {'root': 'node_modules/jquery/dist/'})
})
router.get('/limberjax.js', (req, res, next) => {
  res.sendFile('limberjax.js', {'root': 'src/'})
})
router.get('/link-updater.js', (req, res, next) => {
  res.sendFile('link-updater.js', {'root': 'test-data/app/scripts/'})
})

// Test http codes
router.all('/http/:code', (req, res, next) => {
  res.sendStatus(req.params.code)
})

// Version checking
router.all('/*', (req, res, next) => {
  if (req.query.limberjax && req.query.limberjax !== version) {
    res.statusCode = 412
    res.send('Precondition Failed')
    return
  }

  next()
})

// General routing
router.get('/*', (req, res, next) => {
  res.render('paths/path.html', {
    title: req.url,
    path: req.url,
    limberjax: req.query.limberjax,
    version: req.url === '/bad-version' ? commit2 : version
  })
})
router.post('/*', multer.any(), (req, res, next) => {
  let formData = ''
  for (let field in req.body) {
    formData += field + ':' + req.body[field] + ';'
  }
  req.files.forEach(function (file) {
    formData += file.fieldname + ':' +
      file.originalname + '|' +
      file.encoding + '|' +
      file.mimetype + '|' +
      file.size + ';'
  })
  res.render('paths/path.html', {
    title: req.url,
    path: req.url,
    limberjax: req.query.limberjax,
    form_data: formData,
    version: req.url === '/bad-version' ? commit2 : version
  })
})

module.exports = router
